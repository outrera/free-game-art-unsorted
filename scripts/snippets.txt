Duplicate license.txt for each file:
  for i in *; do cp ../license.txt "$(basename "$i" | cut -d. -f1).txt"; done

Mass rename files in folder, using sed:
  for i in *; do echo mv "$i" "$(echo "$i" | sed "s/impact-/hit-/")"; done

Crop 100x130 frame.png located at 32,16 in sheet.png:
  convert sheet.png -crop 100x130+32+16 frame.png

Same, but for all files in the folder
  for i in *.png; do echo convert "$i" -crop 64x128+24+0 "x$i"; done

Resize images by 25%:
   for i in *.png; do convert "$i" -resize 25% "x$i"; done

Split gif animation into separate frames:
  convert -verbose -coalesce src.gif dst.png

Split psd file into respective layers:
  convert -coalesce src.psd layer.png


Create gif animation from separate frames at 10 frames per second:
  convert -delay $(echo $[100/10]) -dispose Background -loop 1 *.png dst.gif

Same as above but for several images split into folders:
  for i in */; do convert -delay $(echo $[100/10]) -dispose Background -loop 1 $i*.png "$(basename "$i")".gif; done

Tile frames into 512x96 sheet (see also "sheetify" script):
  montage -background transparent -geometry "512x96>+0+0" -gravity NorthWest -tile 1x Frame*.png result.png

Alternatively (19 is the number of frames per line)
  montage -background transparent -geometry "64x128>+0+0" -gravity NorthWest -tile 19x Frame*.png result.png

Convert SVG to PNG, rendering at 256x256
  convert -background none -size 256x256 source.svg target.png

Extract audio track out of 1.mp4 video
  mplayer -srate 44100 -vo null -vc null -ao pcm:fast:file="1.wav" "1.mp4"

Split image into 64x64 tiles:
  convert input.png -crop 64x64 +repage 3-idle%d.png

Prefix 0 to single-digit indices (needed for sheetify):
  for i in *.png; do sename "\([^0-9]\)\([0-9]\)\.png" "0\0\1.png" $i; done

Get all png files under the current folder, prefixed with path
  find . -type f -name "*.png" | while read i; do cp "$i" "$(echo "$i" | sed 's%^\./%%' | sed 's%/%_%g')"; done

Strip physical pixel aspect ratio from a png:
  pngcrush -rem pHYs -ow image.png

Rotate video (use -vfilters "rotate=90" to rotate at right angle):
  ffmpeg -i input.mp4 -vf "rotate=-30*PI/180" rotated.mp4

Move all .svn folders to the top folder
  for i in $(find . -type d -name ".svn" -exec echo "{}" \;); do mv "$i" "$(echo "$i" | sed 's%/%-%g' | sed 's%-\.svn%%g' | sed 's%^\.%svn%')"; done


Concatenate multiple flac files into single flac:
  sox *.flac result.flac

Convert 32bit float wavs to 16bit wavs
Note: manual says dithering is required to reduce noise resulting from conversion
  for i in *.wav; do sox "$i" -b 16 "16bit/$i" gain -1 rate 44100 dither -s; done

Raw CD tracks to WAV
  for i in *.raw; do sox -r 44100 -e signed -b 16 -c 2 "$i" "$i.wav"; done

# extract color table from an image
convert input.png -unique-colors -scale 100%  cmap.png

# apply colormap to an image
convert input.pnge -remap cmap.png  -dither None output.png

# palette swapping for truecolor images
convert input.png
    -fill #FFFF00 -opaque #999999
    -fill #FF00FF9C -opaque #9C59919C
    output.png
